# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle


env: # (11)
  S3_BUCKET_NAME: yosong-freelec-springboot-build
  PROJECT_NAME: freelec-springboot2-webservice

name: freelec-springboot-webservice-deploy # (0) Github Actions에서 보여질 이름을 지정

on:
  release:
    types: [push] # (1) Action을 실행하게 할 방법을 지정합니다.
  push:
    branches: [main] # (2) 현재 만드는 Github Action의 트리거 브랜치를 지정합니다.
  workflow_dispatch: # (3) 수동으로도 실행이 가능합니다.

jobs:
  build:
    runs-on: ubuntu-latest # (4) 해당 Github Action 스크립트가 작동될 OS환경을 지정합니다.
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3 # (5) 프로젝트 코드를 CheckOut합니다.
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3 # (6) Github Action이 실행될 OS에 Java를 설치합니다.
      with:
        java-version: '11'
        distribution: 'temurin'
  
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew # (7) gradle wrapper를 실행할 수 있도록 실행 권한 (+x)을 줍니다.
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build -x test build # (8) gradle wrapper를 통해 해당 프로젝트를 build합니다.
      shell: bash
      
    - name: Get current time
      uses: 1466587594/get-current-time@v2 # (9)
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss
        utcOffset: "+09:00"
    
    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # (10)
      shell: bash
      
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip . # (12)
      shell: bash
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1 # (13)
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME.zip # (14)
      
